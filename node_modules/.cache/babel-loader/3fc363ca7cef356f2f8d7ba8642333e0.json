{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\emoji-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\emoji-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\n\n/**\r\n * concept notes: styling in react\r\n */\n\n/**\r\n * concept of hashmap (object as hashmap)\r\n * O(1) and why we are doing this.\r\n */\nvar emojiDictionary = {\n  \"üòä\": \"Smiling\",\n  \"üò≥\": \"disbelief\",\n  \"üòî\": \"sad\",\n  \"ü•°\": \"takeout box\",\n  \"‚ù§Ô∏è\": \"love\",\n  \"üòë\": \"annoyance\" /** add some more to show how the app now expands when there's new data */\n};\n\n/**\r\n * Bonus feature\r\n * converting an object to array of keys\r\n */\nvar emojis = Object.keys(emojiDictionary);\nexport default function App() {\n  var _this = this;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    emoji = _useState2[0],\n    setEmoji = _useState2[1]; /** concept 2 is useState */\n  var _useState3 = useState(\"translation will appear here..\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    meaning = _useState4[0],\n    setMeaning = _useState4[1];\n  function changeHandler(event) {\n    var inputEmoji = event.target.value;\n    setEmoji(inputEmoji);\n    if (inputEmoji in emojiDictionary) {\n      setMeaning(emojiDictionary[inputEmoji]);\n    } else {\n      setMeaning(\"failure to recognise this emoji\");\n    }\n  }\n  function emojiClickHandler(inputEmoji) {\n    setMeaning(emojiDictionary[inputEmoji]);\n  }\n  return (\n    /*#__PURE__*/\n    /** concept 3 is onchange */\n    React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"inside outttttt\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: changeHandler,\n      value: emoji,\n      placeholder: \"Search your emoji\",\n      style: {\n        padding: \"1em\",\n        minWidth: \"80%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, \" \", emoji, \" \"), \" \", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \" \", meaning, \" \"), \" \", /** Bonus feature; if time permmits */\n    /**\r\n     * concepts to cover: mapping a list\r\n     * click handler on list item\r\n     */\n    emojis.map(function (emoji) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        onClick: function onClick() {\n          return emojiClickHandler(emoji);\n        },\n        style: {\n          fontSize: \"2rem\",\n          padding: \"0.5rem\",\n          cursor: \"pointer\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \" \", emoji, \" \");\n    }))\n  );\n}","map":{"version":3,"names":["React","useState","emojiDictionary","emojis","Object","keys","App","_this","_useState","_useState2","_slicedToArray","emoji","setEmoji","_useState3","_useState4","meaning","setMeaning","changeHandler","event","inputEmoji","target","value","emojiClickHandler","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","style","padding","minWidth","map","onClick","fontSize","cursor"],"sources":["C:/Projects/emoji-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\n/**\r\n * concept notes: styling in react\r\n */\r\n\r\n/**\r\n * concept of hashmap (object as hashmap)\r\n * O(1) and why we are doing this.\r\n */\r\nconst emojiDictionary = {\r\n  \"üòä\": \"Smiling\",\r\n  \"üò≥\": \"disbelief\",\r\n  \"üòî\": \"sad\",\r\n  \"ü•°\": \"takeout box\",\r\n  \"‚ù§Ô∏è\": \"love\",\r\n  \"üòë\":\r\n    \"annoyance\" /** add some more to show how the app now expands when there's new data */\r\n};\r\n\r\n/**\r\n * Bonus feature\r\n * converting an object to array of keys\r\n */\r\nconst emojis = Object.keys(emojiDictionary);\r\n\r\nexport default function App() {\r\n  const [emoji, setEmoji] = useState(\"\"); /** concept 2 is useState */\r\n  const [meaning, setMeaning] = useState(\"translation will appear here..\");\r\n\r\n  function changeHandler(event) {\r\n    const inputEmoji = event.target.value;\r\n    setEmoji(inputEmoji);\r\n\r\n    if (inputEmoji in emojiDictionary) {\r\n      setMeaning(emojiDictionary[inputEmoji]);\r\n    } else {\r\n      setMeaning(\"failure to recognise this emoji\");\r\n    }\r\n  }\r\n\r\n  function emojiClickHandler(inputEmoji) {\r\n    setMeaning(emojiDictionary[inputEmoji]);\r\n  }\r\n\r\n  return (\r\n    /** concept 3 is onchange */\r\n    <div className=\"App\">\r\n      <h1>inside outttttt</h1>\r\n      <input\r\n        onChange={changeHandler}\r\n        value={emoji}\r\n        placeholder={\"Search your emoji\"}\r\n        style={{\r\n          padding: \"1em\",\r\n          minWidth: \"80%\"\r\n        }}\r\n      />\r\n      <h2> {emoji} </h2> {/** Concept 1: JSX */}\r\n      <h3> {meaning} </h3> {/** how much part is re-rendered. */}\r\n      {\r\n        /** Bonus feature; if time permmits */\r\n        /**\r\n         * concepts to cover: mapping a list\r\n         * click handler on list item\r\n         */\r\n        emojis.map((emoji) => (\r\n          <span\r\n            onClick={() => emojiClickHandler(emoji)}\r\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\r\n          >\r\n            {\" \"}\r\n            {emoji}{\" \"}\r\n          </span>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}